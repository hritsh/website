---
import Layout from "../layouts/Layout.astro";
import Navbar from "../components/Navbar.astro";
import Window from "../components/Window.astro";
import { projectsData } from "../data/projects";

const modalProject = Astro.props?.modalProject ?? null;
---

<Layout title="Projects - Hritish Mahajan">
	<div class="master-container">
		<Navbar pageTitle="Projects" />

		<div class="projects-grid">
			{
				projectsData.map((project) => (
					<div class="project-wrapper" id={project.name.toLowerCase()} data-project={JSON.stringify(project)}>
						<Window class="project-detail-window" title={project.name} icon={project.icon} id={project.name.toLowerCase()}>
							<div class="project-detail">
								<div class="project-screenshot">
									<img
										src={project.imageUrl || `/projects/${project.name.toLowerCase()}_screenshot.png`}
										alt={`${project.name} screenshot`}
										onerror="this.style.display='none'"
									/>
								</div>
								<div class="project-info">
									<p>{project.description}</p>
									<div class="project-tech-stack">
										{project.technologies && (
											<div class="tech-badges">
												<span class="tech-badges-label">tech stack</span>
												{project.technologies.map((tech) => {
													let label = tech;
													let logo = tech;
													const match = tech.match(/^(.*)\((.*)\)$/);
													if (match) {
														label = match[1].trim();
														logo = match[2].trim();
													}
													return (
														<img
															src={`https://img.shields.io/badge/${encodeURIComponent(label)}-22223b?style=flat-square&logo=${encodeURIComponent(logo)}`}
															alt={label}
															class="tech-badge"
															height="20"
															style="margin-right:4px;margin-bottom:4px;"
														/>
													);
												})}
											</div>
										)}
									</div>{" "}
									<div class="project-buttons">
										<div class="left-buttons">
											<a href={project.url} target="_blank" class="system-btn github-btn">
												<img src="/svg/github.svg" width="16" height="16" alt="" />
												GitHub
											</a>
											{project.demoUrl && (
												<a href={project.demoUrl} target="_blank" class="system-btn demo-btn">
													<img src="/svg/globe.svg" width="16" height="16" alt="" />
													Website
												</a>
											)}
										</div>
										<div class="right-buttons">
											<button class="system-btn info-btn" data-project={JSON.stringify(project)}>
												<img src="/svg/info.svg" width="16" height="16" alt="" />
												Read More
											</button>
										</div>
									</div>
								</div>
							</div>
						</Window>
					</div>
				))
			}
		</div>
	</div>

	<!-- Project Modal -->
	<div id="project-modal" class="modal" style="display: none;">
		<div class="modal-backdrop"></div>
		<div class="modal-dialog">
			<Window title="" id="project-modal-window" showCloseBtn={true} closeBtnText="ã…¤">
				<div id="project-modal-content" class="project-modal-content">
					<div class="loading-spinner">Loading project details...</div>
				</div>
			</Window>
		</div>
	</div>
</Layout>

<script is:inline define:vars={{ modalProject }}>
	window.__MODAL_PROJECT__ = modalProject;
</script>
<script src="/src/scripts/projects.js"></script>

<style>
	/* Import the projects CSS */
	@import "../styles/projects.css";

	/* Window title with icon */
	.window-title-with-icon {
		display: flex;
		align-items: center;
		gap: 6px;
	}

	.title-icon {
		width: 16px;
		height: 16px;
		flex-shrink: 0;
	}

	/* Project wrapper for click handling */
	.project-wrapper {
		cursor: pointer;
		transition: transform 0.1s ease;
	}

	/* Project wrapper for click handling */
	.project-wrapper {
		cursor: pointer;
		transition: transform 0.1s ease;
	}

	.project-wrapper:hover {
		transform: translateY(-2px);
	}

	/* Project buttons layout */
	.project-buttons {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-top: 15px;
		gap: 10px;
	}

	.left-buttons,
	.right-buttons {
		display: flex;
		gap: 6px;
	}

	/* Ensure buttons don't trigger window click */
	.project-buttons a,
	.project-buttons button {
		position: relative;
		z-index: 10;
	}

	/* Project info layout in modal */
	.project-info-header {
		display: flex;
		justify-content: space-between;
		align-items: flex-start;
		margin-bottom: 20px;
		gap: 20px;
	}

	.project-info > p {
		margin: 0 0 15px 0;
		text-align: center;
	}

	.project-title-section {
		flex: 1;
	}

	.project-meta-section {
		flex-shrink: 0;
		text-align: right;
		min-width: 200px;
	}

	.project-meta-section h1 {
		margin: 0 0 10px 0;
		font-size: 2em;
	}

	.project-meta-section .tech-list {
		margin-bottom: 15px;
		color: #666;
		font-size: var(--font-size-small);
	}

	.project-meta-section .project-links {
		display: flex;
		gap: 8px;
		justify-content: flex-end;
		flex-wrap: wrap;
	}

	.tech-badges {
		position: relative;
		display: flex;
		flex-wrap: wrap;
		gap: 4px;
		margin: 8px 0;
		justify-content: center;
		padding: 1rem;
		border: var(--img-border);
		box-shadow: var(--img-shadow);
	}
	.tech-badge {
		border: var(--img-border);
		box-shadow: var(--img-shadow);
		height: 1.3em;
	}
	.tech-badges-label {
		position: absolute;
		top: -0.7em;
		left: 0.5em;
		font-family: var(--font-main);
		font-size: 1em;
		color: #22223b;
		background: #fff;
		padding: 0px 6px;
	}

	/* Additional override for images and videos */
	:global(.readme-content img),
	:global(.readme-content video) {
		max-width: 80% !important;
		border: var(--img-border);
		box-shadow: var(--img-shadow);
	}

	:global(.readme-content video) {
		background: #000 !important;
	}

	:global(#project-modal-window) {
		margin: 0 !important;
	}
	:global(#project-modal-window > .window-pane) {
		padding: 0 !important;
	}

	:global(#project-modal-window > .window-pane) {
		height: calc(100% - 35px) !important;
	}

	:global(.title span) {
		font-size: var(--font-size-title) !important;
	}

	@media screen and (max-width: 768px) {
		.projects-grid {
			grid-template-columns: 1fr;
			gap: 5px;
			margin: 10px 0;
			width: 80vw;
			display: block;
		}

		.project-detail-window {
			width: 90vw;
		}

		#project-modal-window {
			width: 90vw !important;
			max-height: 90vh;
		}

		.modal-dialog {
			width: 90vw;
		}

		#project-modal-content {
			max-height: 75vh;
			padding: 10px 15px;
		}

		.project-header {
			flex-direction: column;
			gap: 15px;
			align-items: stretch;
		}

		.project-header-buttons {
			justify-content: center;
			flex-wrap: wrap;
		}

		.project-buttons {
			flex-direction: column;
			gap: 10px;
			align-items: stretch;
		}

		.left-buttons,
		.right-buttons {
			justify-content: center;
		}
	}
</style>
